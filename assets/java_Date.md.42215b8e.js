import{_ as s,c as t,o as a,a as n}from"./app.464941dd.js";const l="/java/Date/时间匹配模式.png",p="/java/Date/匹配模式例子.png",m=JSON.parse('{"title":"Date类","description":"","frontmatter":{},"headers":[{"level":2,"title":"相关介绍","slug":"相关介绍","link":"#相关介绍","children":[]},{"level":2,"title":"Date类的使用","slug":"date类的使用","link":"#date类的使用","children":[]},{"level":2,"title":"SimpelDateFormat 类","slug":"simpeldateformat-类","link":"#simpeldateformat-类","children":[]},{"level":2,"title":"Calendar类","slug":"calendar类","link":"#calendar类","children":[]}],"relativePath":"java/Date.md","lastUpdated":1677132641000}'),e={name:"java/Date.md"},o=n(`<h1 id="date类" tabindex="-1">Date类 <a class="header-anchor" href="#date类" aria-hidden="true">#</a></h1><p>JDK中已经写好的java Bean类。</p><h2 id="相关介绍" tabindex="-1">相关介绍 <a class="header-anchor" href="#相关介绍" aria-hidden="true">#</a></h2><ol><li>世界标准时间 <ul><li>原子钟/UTC:利用铯原子的震动的频率计算出来的时间,作为世界标准时间UTC。</li><li>GMT:格林威治(or格林尼治)时间,即本初子午线上,伦敦格林威治的时间为标准时间，现在使用UTC为标准时间。</li><li>中国的地理位置在东8区，所以需要在世界标准时间上+8</li></ul></li><li>时间单位换算 <ul><li>1秒 = 1000毫秒</li><li>1毫秒 = 1000微秒</li><li>1微秒 = 1000纳秒</li></ul></li></ol><h2 id="date类的使用" tabindex="-1">Date类的使用 <a class="header-anchor" href="#date类的使用" aria-hidden="true">#</a></h2><ol><li><p>构造方法：</p><table><thead><tr><th>构造方法名</th><th>具体描述</th></tr></thead><tbody><tr><td>Date()</td><td>创建一个Date对象并初始化它，使用当前时间初始化。</td></tr><tr><td>Date(long date)</td><td>创建一个 Date对象，并将其初始化为标准基准时间以后的指定毫秒数，即1970年1月1日00:00:00 GMT。</td></tr></tbody></table></li><li><p>普通方法</p><table><thead><tr><th>修饰符及返回值类型</th><th>方法名</th><th>具体描述</th></tr></thead><tbody><tr><td>void</td><td>setTime(long time)</td><td>设置此 Date对象为1970年1月1日00:00:00 GMT后的 time毫秒的时间。</td></tr><tr><td>boolean</td><td>after(Date time)</td><td>测试此日期是否在指定日期之后</td></tr><tr><td>boolean</td><td>before(Date time)</td><td>测试对象中的日期是否在在所给参数的日期的前面。</td></tr><tr><td>Object</td><td>clone()</td><td>复制Date对象</td></tr><tr><td>boolean</td><td>equals(Object obj)</td><td>比较两个日期是否相等。</td></tr><tr><td>static Date</td><td>from(Instant instant)</td><td>从 Instant对象获取一个 Date的实例。</td></tr><tr><td>long</td><td>getTime()</td><td>返回自1970年1月1日至今的毫秒数 。</td></tr><tr><td>int</td><td>hashCode()</td><td>返回此对象的哈希码值（地址）。</td></tr><tr><td>String</td><td>toString()</td><td>将此 Date对象转换为 String的形式</td></tr></tbody></table></li><li><p>代码示例</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_01Date</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;">				</span><span style="color:#676E95;font-style:italic;">// 创建Date对象 Wed Feb 22 20:19:36 CST 2023</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Random</span><span style="color:#A6ACCD;"> randomDate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Random</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 产生随机的long类型的数</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> randomDate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextLong</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">			</span><span style="color:#676E95;font-style:italic;">// 创建带特定日期Wed May 11 23:51:45 CST 143639588</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">after</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date1</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">before</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date1</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;">		</span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// setTime() 方法</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">long</span><span style="color:#A6ACCD;"> time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTime</span><span style="color:#89DDFF;">()+</span><span style="color:#F78C6C;">1000l</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">365</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTime</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ol><h2 id="simpeldateformat-类" tabindex="-1">SimpelDateFormat 类 <a class="header-anchor" href="#simpeldateformat-类" aria-hidden="true">#</a></h2><ol><li><p>构造方法</p><table><thead><tr><th>构造方法名</th><th>具体描述</th></tr></thead><tbody><tr><td>SimpleDateFormat()</td><td>使用默认模式和日期格式符号构造一个 SimpleDateFormat对象</td></tr><tr><td>SimpleDateFormat(String pattern)</td><td>使用给定模式创建SimpelDateFormat对象</td></tr><tr><td>SimpleDateFormat(String pattern, Locale locale)</td><td>构造一个 SimpleDateFormat使用给定的模式和给定的区域设置的默认日期格式符号。</td></tr><tr><td>SimpleDateFormat(String pattern, DateFormatSymbols formatSymbols)</td><td>使用给定的模式和日期格式符号构造一个 SimpleDateFormat 。</td></tr></tbody></table></li><li><p>时间模式字符串</p><ul><li><p><img src="`+l+'" alt="时间匹配模式"></p></li><li><p>实例</p><p>以下示例显示如何在美国地区中解释日期和时间模式。 给定的日期和时间是2001-07-04 12:08:56当地时间在美国太平洋时间时区。</p><p><img src="'+p+`" alt="匹配模式例子"></p></li></ul></li><li><p>实例方法</p><table><thead><tr><th>修饰符及返回值类型</th><th>方法名</th><th>具体描述</th></tr></thead><tbody><tr><td>StringBuffer</td><td>format(Date date, StringBuffer toAppendTo, FieldPosition pos)</td><td>将给定的Date成日期/时间字符串，并将结果追加到给定的StringBuffer。</td></tr><tr><td>Date</td><td>parse(String text, ParsePosition pos)</td><td>从字符串中解成为Date。</td></tr><tr><td>String</td><td>toPattern</td><td>返回描述此日期格式的模式字符串。</td></tr></tbody></table></li><li><p>代码示例</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">SimpleDateFormat</span><span style="color:#A6ACCD;"> sdf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SimpleDateFormat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yyyy年LL月dd日 HH:mm:ss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 创建一个SimpleDateForma对象，并指定模式</span></span>
<span class="line"><span style="color:#A6ACCD;">sdf</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">formate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 格式化日期</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><h2 id="calendar类" tabindex="-1">Calendar类 <a class="header-anchor" href="#calendar类" aria-hidden="true">#</a></h2><ol><li><p>该类声明：</p><p>public abstract class Calendar extends Object implements Serializable, Cloneable, Comparable</p><p>创建一个日历的对象，产生实现特定语言和日历风格的日期时间格式化所需的所有日历字段值（例如日语 - 公历，日语 - 繁体），可以获得日期的年，月，日，时，分，秒等信息，方便日期的加减等操作。</p></li><li><p>已知直接子类：GregorianCalendar</p></li><li><p>创建Calendar对象：</p><p>Calendar rightNow = Calendar.getInstance();</p></li><li><p>字段</p><table><thead><tr><th>修饰符和类型</th><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>static int</td><td>ALL_STYLES</td><td>getDisplayNames的样式说明符， 表示所有样式的名称，如“1月”和“1月”。</td></tr><tr><td>static int</td><td>AM</td><td>AM_PM字段的值表示从午夜到中午之前的一天中的一段时间。</td></tr><tr><td>static int</td><td>PM</td><td>AM_PM字段的值表示从中午到午夜之前的一天中的一段时间。</td></tr><tr><td>static int</td><td>AM_PM</td><td>通过 get和set设置时间HOUR是中午之前或者之后。</td></tr><tr><td>protected boolean</td><td>areFieldsSet</td><td>如果fields与当前设置的时间同步，则为真。</td></tr><tr><td>static int</td><td>DAY_OF_YEAR</td><td>get和set字段编号， set本年的日数</td></tr><tr><td>static int</td><td>DAY_OF_WEEK_IN_MONTH</td><td>get和 set当月的日期的序号。</td></tr><tr><td>static int</td><td>DAY_OF_WEEK</td><td>get和set表示一周中的日期。</td></tr><tr><td>static int</td><td>DAY_OF_MONTH</td><td>get和set本月的日期。</td></tr><tr><td>static int</td><td>DATE</td><td>get和set该月的日期。</td></tr><tr><td>static int</td><td>WEEK_OF_MONTH</td><td>get和set当月的周数。</td></tr><tr><td>static int</td><td>WEEK_OF_YEAR</td><td>get和set本年度的周数。</td></tr><tr><td>static int</td><td>YEAR</td><td>get和set表示年份。</td></tr><tr><td>static int</td><td>ZONE_OFFSET</td><td>get和setGMT以毫秒为get的原始偏移量。</td></tr></tbody></table></li><li><p>实例方法</p><table><thead><tr><th>修饰符和类型</th><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>abstract void</td><td>add(int field, int amount)</td><td>根据日历的规则，将指定字段的时间量添加或减去给定的日历字段。正数为加，负数为减。</td></tr><tr><td>abstract int</td><td>getLeastMaximum(int field)</td><td>返回此 Calendar实例的日历字段的最低最大值。</td></tr><tr><td>boolean</td><td>after(Object when)</td><td>是否 Calendar指定日期对象之后的时间 。</td></tr><tr><td>boolean</td><td>before(Object when)</td><td>是否 Calendar指定日期对象之前的时间 。</td></tr><tr><td>protected void</td><td>complete()</td><td>填写日历字段中的任何未设置的字段。</td></tr><tr><td>protected abstract void</td><td>computeFields()</td><td>当前毫秒时间值转换为 time的日历字段值。</td></tr><tr><td>boolean</td><td>equals(Object obj)</td><td>将此 Calendar与指定的Object进行 Object 。</td></tr><tr><td>String</td><td>getCalendarType</td><td>返回此 Calendar的日历类型。</td></tr><tr><td>int</td><td>set/getFirstDayOfWeek()</td><td>设置/得到一周的第一天</td></tr><tr><td>abstract int</td><td>getMaximum(int field)</td><td>返回此 Calendar实例的给定日历字段的 Calendar 。</td></tr><tr><td>int</td><td>getMinimalDaysInFirstWeek()</td><td>获得一年中第一周所需的最低限度的日子; 例如，如果第一周被定义为包含一年中的第一个月的第一个星期，则此方法返回1。</td></tr><tr><td>abstract int</td><td>getGreatestMinimum(int field)</td><td>返回此 Calendar实例的所给给定日历字段的最高最小值。</td></tr><tr><td>static Calendar</td><td>getInstance()</td><td>使用默认时区和区域设置获取日历对象。</td></tr><tr><td>static Calendar</td><td>getInstance(Locale aLocale)</td><td>使用默认时区和指定的区域设置获取日历</td></tr><tr><td>static Calendar</td><td>getInstance(TimeZone zone)</td><td>获取具有指定时区和区域设置的日历。</td></tr><tr><td>void</td><td>set(int field, int value)</td><td>将给定的日历字段设置为给定的值。</td></tr><tr><td>void</td><td>set(int year, int month, int date)</td><td>设置日历字段中的值 YEAR， MONTH和 DAY_OF_MONTH。</td></tr><tr><td>void</td><td>set(int year, int month, int date, int hourOfDay, int minute)</td><td>设置日历字段中的值 YEAR ， MONTH ， DAY_OF_MONTH， HOUR_OF_DAY和 MINUTE</td></tr><tr><td>void</td><td>set(int year, int month, int date, int hourOfDay, int minute, int second)</td><td>设置字段中的值 YEAR ， MONTH ， DAY_OF_MONTH ， HOUR_OF_DAY ， MINUTE和 SECOND 。</td></tr><tr><td>int</td><td>get(int field)</td><td>返回给定日历字段的值。</td></tr></tbody></table></li><li><p>代码示例</p><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">Calendar</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">年</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YEAR</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">月</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MONTH</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">日</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DAY_OF_MONTH</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">时</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HOUR_OF_DAY</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">分</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MINUTE</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">秒</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SECOND</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YEAR</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">年</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YEAR</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">        date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YEAR</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">年</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Calendar</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">YEAR</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ol>`,10),r=[o];function c(d,D,F,y,i,A){return a(),t("div",null,r)}const b=s(e,[["render",c]]);export{m as __pageData,b as default};
